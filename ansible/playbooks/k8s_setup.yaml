- name: Kubernetes Cluster - Common Configuration
  hosts: all
  become: true
  tasks:

    - name: Set hostname from private DNS name
      hostname:
        name: "{{ hostvars[inventory_hostname]['private_dns_name'] }}"

    - name: Enable bridged networking and IP forwarding
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
      notify: Reload sysctl

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required base packages
      apt:
        name:
          - apt-transport-https
          - curl
          - ca-certificates
        state: present

    - name: Add Kubernetes GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        state: present

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /
        state: present
        filename: kubernetes

    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet=1.30.0-1.1
          - kubeadm=1.30.0-1.1
          - kubectl=1.30.0-1.1
          - kubernetes-cni
          - docker.io
        state: present

    - name: Hold Kubernetes packages
      shell: apt-mark hold kubelet kubeadm kubectl

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Enable and restart Docker
      service:
        name: docker
        state: restarted
        enabled: yes

    - name: Configure containerd cgroup driver
      shell: |
        mkdir -p /etc/containerd
        containerd config default > /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml

    - name: Enable and restart containerd
      service:
        name: containerd
        state: restarted
        enabled: yes

  handlers:
    - name: Reload sysctl
      command: sysctl --system

- name: Kubernetes Cluster - Master Node Configuration
  hosts: role_master
  become: true
  tasks:

    - name: Pull Kubernetes images
      command: kubeadm config images pull

    - name: Initialize Kubernetes master
      command: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=All

    - name: Configure kubeconfig for ubuntu user
      # become_user: root
      shell: |
        mkdir -p /home/ubuntu/.kube
        cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
        chown ubuntu:ubuntu /home/ubuntu/.kube/config

    - name: Install Flannel CNI
      become: false
      remote_user: ubuntu
      shell: kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml

    - name: Generate kubeadm join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Show join command
      debug:
        msg: "{{ join_command.stdout }}"

    - name: Save join command for worker nodes
      add_host:
        name: kube_master
        worker_join: "{{ join_command.stdout }}"

    - name: Install Helm
      become: false
      remote_user: ubuntu
      shell: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod +x get_helm.sh
        ./get_helm.sh

- name: Kubernetes Cluster - Worker Node Configuration
  hosts: role_worker
  become: true
  tasks:

    - name: Join worker to the cluster
      shell: "{{ hostvars['kube_master']['worker_join'] }}"
      register: join_output

    - debug:
        msg: "{{ join_output.stdout }}"
